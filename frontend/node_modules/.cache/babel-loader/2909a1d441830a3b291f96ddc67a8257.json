{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ammar Syed\\\\git\\\\Moodi\\\\frontend\\\\src\\\\components\\\\Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { fetchMoodData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [moodData, setMoodData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const data = await fetchMoodData();\n      setMoodData(data);\n    };\n    getData();\n  }, []);\n  const moods = ['😢', '😟', '😐', '😊', '😁'];\n  const moodLabels = ['Very Sad', 'Sad', 'Neutral', 'Happy', 'Very Happy'];\n  const data = {\n    labels: moodData.map(log => new Date(log.timestamp).toLocaleTimeString()),\n    datasets: [{\n      data: moodData.map(log => log.mood),\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(75,192,192,0.2)',\n      hoverBorderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value) {\n            return moods[value - 1];\n          }\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return moodLabels[tooltipItem.raw - 1];\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mood Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: moodData.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: new Date(log.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \": \", log.note]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"LhpyrrOPcJMhLGELHS/y8pXitXE=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useEffect","useState","Line","fetchMoodData","jsxDEV","_jsxDEV","Overview","_s","moodData","setMoodData","getData","data","moods","moodLabels","labels","map","log","Date","timestamp","toLocaleTimeString","datasets","mood","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","scales","y","ticks","callback","value","plugins","tooltip","callbacks","label","tooltipItem","raw","children","fileName","_jsxFileName","lineNumber","columnNumber","index","toLocaleString","note","_c","$RefreshReg$"],"sources":["C:/Users/Ammar Syed/git/Moodi/frontend/src/components/Overview.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { fetchMoodData } from '../api';\r\n\r\nconst Overview = () => {\r\n  const [moodData, setMoodData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetchMoodData();\r\n      setMoodData(data);\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  const moods = ['😢', '😟', '😐', '😊', '😁'];\r\n  const moodLabels = ['Very Sad', 'Sad', 'Neutral', 'Happy', 'Very Happy'];\r\n\r\n  const data = {\r\n    labels: moodData.map(log => new Date(log.timestamp).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        data: moodData.map(log => log.mood),\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(75,192,192,0.2)',\r\n        hoverBorderColor: 'rgba(75,192,192,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          callback: function(value) {\r\n            return moods[value - 1];\r\n          },\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(tooltipItem) {\r\n            return moodLabels[tooltipItem.raw - 1];\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Mood Overview</h2>\r\n      <Line data={data} options={options} />\r\n      <h3>Notes</h3>\r\n      <ul>\r\n        {moodData.map((log, index) => (\r\n          <li key={index}>\r\n            <strong>{new Date(log.timestamp).toLocaleString()}</strong>: {log.note}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}